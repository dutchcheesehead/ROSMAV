; Auto-generated. Do not edit!


(in-package joint_states_listener-srv)


;//! \htmlinclude ReturnJointStates-request.msg.html

(defclass <ReturnJointStates-request> (ros-message)
  ((name
    :reader name-val
    :initarg :name
    :type (vector string)
   :initform (make-array 0 :element-type 'string :initial-element "")))
)
(defmethod serialize ((msg <ReturnJointStates-request>) ostream)
  "Serializes a message object of type '<ReturnJointStates-request>"
  (let ((__ros_arr_len (length (slot-value msg 'name))))
    (write-byte (ldb (byte 8 0) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 8) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 16) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 24) __ros_arr_len) ostream))
  (map nil #'(lambda (ele) (let ((__ros_str_len (length ele)))
    (write-byte (ldb (byte 8 0) __ros_str_len) ostream)
    (write-byte (ldb (byte 8 8) __ros_str_len) ostream)
    (write-byte (ldb (byte 8 16) __ros_str_len) ostream)
    (write-byte (ldb (byte 8 24) __ros_str_len) ostream))
  (map nil #'(lambda (c) (write-byte (char-code c) ostream)) ele))
    (slot-value msg 'name))
)
(defmethod deserialize ((msg <ReturnJointStates-request>) istream)
  "Deserializes a message object of type '<ReturnJointStates-request>"
  (let ((__ros_arr_len 0))
    (setf (ldb (byte 8 0) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 8) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 16) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 24) __ros_arr_len) (read-byte istream))
    (setf (slot-value msg 'name) (make-array __ros_arr_len))
    (let ((vals (slot-value msg 'name)))
      (dotimes (i __ros_arr_len)
(let ((__ros_str_len 0))
    (setf (ldb (byte 8 0) __ros_str_len) (read-byte istream))
    (setf (ldb (byte 8 8) __ros_str_len) (read-byte istream))
    (setf (ldb (byte 8 16) __ros_str_len) (read-byte istream))
    (setf (ldb (byte 8 24) __ros_str_len) (read-byte istream))
    (setf (aref vals i) (make-string __ros_str_len))
    (dotimes (__ros_str_idx __ros_str_len msg)
      (setf (char (aref vals i) __ros_str_idx) (code-char (read-byte istream))))))))
  msg
)
(defmethod ros-datatype ((msg (eql '<ReturnJointStates-request>)))
  "Returns string type for a service object of type '<ReturnJointStates-request>"
  "joint_states_listener/ReturnJointStatesRequest")
(defmethod md5sum ((type (eql '<ReturnJointStates-request>)))
  "Returns md5sum for a message object of type '<ReturnJointStates-request>"
  #xce9bd2b56c904b190a782a08482fb4e9)
(defmethod message-definition ((type (eql '<ReturnJointStates-request>)))
  "Returns full string definition for message of type '<ReturnJointStates-request>"
  (format nil "string[] name~%~%"))
(defmethod serialization-length ((msg <ReturnJointStates-request>))
  (+ 0
     4 (reduce #'+ (slot-value msg 'name) :key #'(lambda (ele) (declare (ignorable ele)) (+ 4 (length ele))))
))
(defmethod ros-message-to-list ((msg <ReturnJointStates-request>))
  "Converts a ROS message object to a list"
  (list '<ReturnJointStates-request>
    (cons ':name (name-val msg))
))
;//! \htmlinclude ReturnJointStates-response.msg.html

(defclass <ReturnJointStates-response> (ros-message)
  ((found
    :reader found-val
    :initarg :found
    :type (vector integer)
   :initform (make-array 0 :element-type 'integer :initial-element 0))
   (position
    :reader position-val
    :initarg :position
    :type (vector float)
   :initform (make-array 0 :element-type 'float :initial-element 0.0))
   (velocity
    :reader velocity-val
    :initarg :velocity
    :type (vector float)
   :initform (make-array 0 :element-type 'float :initial-element 0.0))
   (effort
    :reader effort-val
    :initarg :effort
    :type (vector float)
   :initform (make-array 0 :element-type 'float :initial-element 0.0)))
)
(defmethod serialize ((msg <ReturnJointStates-response>) ostream)
  "Serializes a message object of type '<ReturnJointStates-response>"
  (let ((__ros_arr_len (length (slot-value msg 'found))))
    (write-byte (ldb (byte 8 0) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 8) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 16) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 24) __ros_arr_len) ostream))
  (map nil #'(lambda (ele)   (write-byte (ldb (byte 8 0) ele) ostream)
  (write-byte (ldb (byte 8 8) ele) ostream)
  (write-byte (ldb (byte 8 16) ele) ostream)
  (write-byte (ldb (byte 8 24) ele) ostream))
    (slot-value msg 'found))
  (let ((__ros_arr_len (length (slot-value msg 'position))))
    (write-byte (ldb (byte 8 0) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 8) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 16) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 24) __ros_arr_len) ostream))
  (map nil #'(lambda (ele) (let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (write-byte (ldb (byte 8 0) bits) ostream)
    (write-byte (ldb (byte 8 8) bits) ostream)
    (write-byte (ldb (byte 8 16) bits) ostream)
    (write-byte (ldb (byte 8 24) bits) ostream)
    (write-byte (ldb (byte 8 32) bits) ostream)
    (write-byte (ldb (byte 8 40) bits) ostream)
    (write-byte (ldb (byte 8 48) bits) ostream)
    (write-byte (ldb (byte 8 56) bits) ostream)))
    (slot-value msg 'position))
  (let ((__ros_arr_len (length (slot-value msg 'velocity))))
    (write-byte (ldb (byte 8 0) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 8) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 16) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 24) __ros_arr_len) ostream))
  (map nil #'(lambda (ele) (let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (write-byte (ldb (byte 8 0) bits) ostream)
    (write-byte (ldb (byte 8 8) bits) ostream)
    (write-byte (ldb (byte 8 16) bits) ostream)
    (write-byte (ldb (byte 8 24) bits) ostream)
    (write-byte (ldb (byte 8 32) bits) ostream)
    (write-byte (ldb (byte 8 40) bits) ostream)
    (write-byte (ldb (byte 8 48) bits) ostream)
    (write-byte (ldb (byte 8 56) bits) ostream)))
    (slot-value msg 'velocity))
  (let ((__ros_arr_len (length (slot-value msg 'effort))))
    (write-byte (ldb (byte 8 0) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 8) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 16) __ros_arr_len) ostream)
    (write-byte (ldb (byte 8 24) __ros_arr_len) ostream))
  (map nil #'(lambda (ele) (let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (write-byte (ldb (byte 8 0) bits) ostream)
    (write-byte (ldb (byte 8 8) bits) ostream)
    (write-byte (ldb (byte 8 16) bits) ostream)
    (write-byte (ldb (byte 8 24) bits) ostream)
    (write-byte (ldb (byte 8 32) bits) ostream)
    (write-byte (ldb (byte 8 40) bits) ostream)
    (write-byte (ldb (byte 8 48) bits) ostream)
    (write-byte (ldb (byte 8 56) bits) ostream)))
    (slot-value msg 'effort))
)
(defmethod deserialize ((msg <ReturnJointStates-response>) istream)
  "Deserializes a message object of type '<ReturnJointStates-response>"
  (let ((__ros_arr_len 0))
    (setf (ldb (byte 8 0) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 8) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 16) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 24) __ros_arr_len) (read-byte istream))
    (setf (slot-value msg 'found) (make-array __ros_arr_len))
    (let ((vals (slot-value msg 'found)))
      (dotimes (i __ros_arr_len)
(setf (ldb (byte 8 0) (aref vals i)) (read-byte istream))
  (setf (ldb (byte 8 8) (aref vals i)) (read-byte istream))
  (setf (ldb (byte 8 16) (aref vals i)) (read-byte istream))
  (setf (ldb (byte 8 24) (aref vals i)) (read-byte istream)))))
  (let ((__ros_arr_len 0))
    (setf (ldb (byte 8 0) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 8) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 16) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 24) __ros_arr_len) (read-byte istream))
    (setf (slot-value msg 'position) (make-array __ros_arr_len))
    (let ((vals (slot-value msg 'position)))
      (dotimes (i __ros_arr_len)
(let ((bits 0))
    (setf (ldb (byte 8 0) bits) (read-byte istream))
    (setf (ldb (byte 8 8) bits) (read-byte istream))
    (setf (ldb (byte 8 16) bits) (read-byte istream))
    (setf (ldb (byte 8 24) bits) (read-byte istream))
    (setf (ldb (byte 8 32) bits) (read-byte istream))
    (setf (ldb (byte 8 40) bits) (read-byte istream))
    (setf (ldb (byte 8 48) bits) (read-byte istream))
    (setf (ldb (byte 8 56) bits) (read-byte istream))
    (setf (aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (let ((__ros_arr_len 0))
    (setf (ldb (byte 8 0) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 8) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 16) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 24) __ros_arr_len) (read-byte istream))
    (setf (slot-value msg 'velocity) (make-array __ros_arr_len))
    (let ((vals (slot-value msg 'velocity)))
      (dotimes (i __ros_arr_len)
(let ((bits 0))
    (setf (ldb (byte 8 0) bits) (read-byte istream))
    (setf (ldb (byte 8 8) bits) (read-byte istream))
    (setf (ldb (byte 8 16) bits) (read-byte istream))
    (setf (ldb (byte 8 24) bits) (read-byte istream))
    (setf (ldb (byte 8 32) bits) (read-byte istream))
    (setf (ldb (byte 8 40) bits) (read-byte istream))
    (setf (ldb (byte 8 48) bits) (read-byte istream))
    (setf (ldb (byte 8 56) bits) (read-byte istream))
    (setf (aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (let ((__ros_arr_len 0))
    (setf (ldb (byte 8 0) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 8) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 16) __ros_arr_len) (read-byte istream))
    (setf (ldb (byte 8 24) __ros_arr_len) (read-byte istream))
    (setf (slot-value msg 'effort) (make-array __ros_arr_len))
    (let ((vals (slot-value msg 'effort)))
      (dotimes (i __ros_arr_len)
(let ((bits 0))
    (setf (ldb (byte 8 0) bits) (read-byte istream))
    (setf (ldb (byte 8 8) bits) (read-byte istream))
    (setf (ldb (byte 8 16) bits) (read-byte istream))
    (setf (ldb (byte 8 24) bits) (read-byte istream))
    (setf (ldb (byte 8 32) bits) (read-byte istream))
    (setf (ldb (byte 8 40) bits) (read-byte istream))
    (setf (ldb (byte 8 48) bits) (read-byte istream))
    (setf (ldb (byte 8 56) bits) (read-byte istream))
    (setf (aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  msg
)
(defmethod ros-datatype ((msg (eql '<ReturnJointStates-response>)))
  "Returns string type for a service object of type '<ReturnJointStates-response>"
  "joint_states_listener/ReturnJointStatesResponse")
(defmethod md5sum ((type (eql '<ReturnJointStates-response>)))
  "Returns md5sum for a message object of type '<ReturnJointStates-response>"
  #xce9bd2b56c904b190a782a08482fb4e9)
(defmethod message-definition ((type (eql '<ReturnJointStates-response>)))
  "Returns full string definition for message of type '<ReturnJointStates-response>"
  (format nil "uint32[] found~%float64[] position~%float64[] velocity~%float64[] effort~%~%~%"))
(defmethod serialization-length ((msg <ReturnJointStates-response>))
  (+ 0
     4 (reduce #'+ (slot-value msg 'found) :key #'(lambda (ele) (declare (ignorable ele)) (+ 4)))
     4 (reduce #'+ (slot-value msg 'position) :key #'(lambda (ele) (declare (ignorable ele)) (+ 8)))
     4 (reduce #'+ (slot-value msg 'velocity) :key #'(lambda (ele) (declare (ignorable ele)) (+ 8)))
     4 (reduce #'+ (slot-value msg 'effort) :key #'(lambda (ele) (declare (ignorable ele)) (+ 8)))
))
(defmethod ros-message-to-list ((msg <ReturnJointStates-response>))
  "Converts a ROS message object to a list"
  (list '<ReturnJointStates-response>
    (cons ':found (found-val msg))
    (cons ':position (position-val msg))
    (cons ':velocity (velocity-val msg))
    (cons ':effort (effort-val msg))
))
(defmethod service-request-type ((msg (eql 'ReturnJointStates)))
  '<ReturnJointStates-request>)
(defmethod service-response-type ((msg (eql 'ReturnJointStates)))
  '<ReturnJointStates-response>)
(defmethod ros-datatype ((msg (eql 'ReturnJointStates)))
  "Returns string type for a service object of type '<ReturnJointStates>"
  "joint_states_listener/ReturnJointStates")
