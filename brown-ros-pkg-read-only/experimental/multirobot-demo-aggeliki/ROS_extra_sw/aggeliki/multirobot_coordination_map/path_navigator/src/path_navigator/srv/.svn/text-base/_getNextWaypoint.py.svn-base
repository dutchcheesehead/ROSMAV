# autogenerated by genmsg_py from getNextWaypointRequest.msg. Do not edit.
import roslib.message
import struct


class getNextWaypointRequest(roslib.message.Message):
  _md5sum = "5bafa82ad199bd41734cd5dba083f74e"
  _type = "path_navigator/getNextWaypointRequest"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """bool in

"""
  __slots__ = ['in_']
  _slot_types = ['bool']

  ## Constructor. Any message fields that are implicitly/explicitly
  ## set to None will be assigned a default value. The recommend
  ## use is keyword arguments as this is more robust to future message
  ## changes.  You cannot mix in-order arguments and keyword arguments.
  ##
  ## The available fields are:
  ##   in_
  ##
  ## @param self: self
  ## @param args: complete set of field values, in .msg order
  ## @param kwds: use keyword arguments corresponding to message field names
  ## to set specific fields. 
  def __init__(self, *args, **kwds):
    if args or kwds:
      super(getNextWaypointRequest, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.in_ is None:
        self.in_ = False
    else:
      self.in_ = False

  ## internal API method
  def _get_types(self): return self._slot_types

  ## serialize message into buffer
  ## @param buff StringIO: buffer
  def serialize(self, buff):
    try:
      buff.write(struct.pack('<B', self.in_))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  ## unpack serialized message in str into this message instance
  ## @param self: self
  ## @param str str: byte array of serialized message
  def deserialize(self, str):
    try:
      end = 0
      start = end
      end += 1
      (self.in_,) = struct.unpack('<B',str[start:end])
      self.in_ = bool(self.in_)
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  ## serialize message with numpy array types into buffer
  ## @param self: self
  ## @param buff StringIO: buffer
  ## @param numpy module: numpy python module
  def serialize_numpy(self, buff, numpy):
    try:
      buff.write(struct.pack('<B', self.in_))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  ## unpack serialized message in str into this message instance using numpy for array types
  ## @param self: self
  ## @param str str: byte array of serialized message
  ## @param numpy module: numpy python module
  def deserialize_numpy(self, str, numpy):
    try:
      end = 0
      start = end
      end += 1
      (self.in_,) = struct.unpack('<B',str[start:end])
      self.in_ = bool(self.in_)
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

# autogenerated by genmsg_py from getNextWaypointResponse.msg. Do not edit.
import roslib.message
import struct


class getNextWaypointResponse(roslib.message.Message):
  _md5sum = "32970d3e7822c2c952eeb697b73b10b5"
  _type = "path_navigator/getNextWaypointResponse"
  _has_header = False #flag to mark the presence of a Header object
  _full_text = """bool out



"""
  __slots__ = ['out']
  _slot_types = ['bool']

  ## Constructor. Any message fields that are implicitly/explicitly
  ## set to None will be assigned a default value. The recommend
  ## use is keyword arguments as this is more robust to future message
  ## changes.  You cannot mix in-order arguments and keyword arguments.
  ##
  ## The available fields are:
  ##   out
  ##
  ## @param self: self
  ## @param args: complete set of field values, in .msg order
  ## @param kwds: use keyword arguments corresponding to message field names
  ## to set specific fields. 
  def __init__(self, *args, **kwds):
    if args or kwds:
      super(getNextWaypointResponse, self).__init__(*args, **kwds)
      #message fields cannot be None, assign default values for those that are
      if self.out is None:
        self.out = False
    else:
      self.out = False

  ## internal API method
  def _get_types(self): return self._slot_types

  ## serialize message into buffer
  ## @param buff StringIO: buffer
  def serialize(self, buff):
    try:
      buff.write(struct.pack('<B', self.out))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  ## unpack serialized message in str into this message instance
  ## @param self: self
  ## @param str str: byte array of serialized message
  def deserialize(self, str):
    try:
      end = 0
      start = end
      end += 1
      (self.out,) = struct.unpack('<B',str[start:end])
      self.out = bool(self.out)
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill


  ## serialize message with numpy array types into buffer
  ## @param self: self
  ## @param buff StringIO: buffer
  ## @param numpy module: numpy python module
  def serialize_numpy(self, buff, numpy):
    try:
      buff.write(struct.pack('<B', self.out))
    except struct.error, se: self._check_types(se)
    except TypeError, te: self._check_types(te)

  ## unpack serialized message in str into this message instance using numpy for array types
  ## @param self: self
  ## @param str str: byte array of serialized message
  ## @param numpy module: numpy python module
  def deserialize_numpy(self, str, numpy):
    try:
      end = 0
      start = end
      end += 1
      (self.out,) = struct.unpack('<B',str[start:end])
      self.out = bool(self.out)
      return self
    except struct.error, e:
      raise roslib.message.DeserializationError(e) #most likely buffer underfill

class getNextWaypoint(roslib.message.ServiceDefinition):
  _type          = 'path_navigator/getNextWaypoint'
  _md5sum = 'bd8d710203bdcbfd5a1389dc6002468b'
  _request_class  = getNextWaypointRequest
  _response_class = getNextWaypointResponse
