/* auto-generated by gensrv_cpp from /home/tjay/ros/ros/naoExpmnt/srv/QVGA.srv.  Do not edit! */
#ifndef SRV_NAOEXPMNT_QVGA_H
#define SRV_NAOEXPMNT_QVGA_H

#include <string>
#include <cstring>
#include <vector>
#include <map>

namespace naoExpmnt
{

struct QVGA
{

inline static std::string getDataType() { return "naoExpmnt/QVGA"; }
inline static std::string getMD5Sum() { return "3c50f975e719c485e41d005c36162c51"; }

//! \htmlinclude Request.msg.html

class Request : public ros::Message
{
public:
  typedef boost::shared_ptr<Request> Ptr;
  typedef boost::shared_ptr<Request const> ConstPtr;

  typedef int8_t _ignore_type;

  int8_t ignore;

  Request() : ros::Message(),
    ignore(0)
  {
  }
  Request(const Request &copy) : ros::Message(),
    ignore(copy.ignore)
  {
    (void)copy;
  }
  Request &operator =(const Request &copy)
  {
    if (this == &copy)
      return *this;
    ignore = copy.ignore;
    return *this;
  }
  virtual ~Request() 
  {
  }
  inline static std::string __s_getDataType() { return std::string("naoExpmnt/QVGARequest"); }
  inline static std::string __s_getMD5Sum() { return std::string(""); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "int8 ignore\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline static std::string __s_getServerMD5Sum() { return std::string("3c50f975e719c485e41d005c36162c51"); }
  inline virtual const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum(); }
  inline static std::string __s_getServiceDataType() { return std::string("naoExpmnt/QVGA"); }
  inline virtual const std::string __getServiceDataType() const { return __s_getServiceDataType(); }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 1; // ignore
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    SROS_SERIALIZE_PRIMITIVE(write_ptr, ignore);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, ignore);
    return read_ptr;
  }
};

typedef boost::shared_ptr<Request> RequestPtr;
typedef boost::shared_ptr<Request const> RequestConstPtr;

//! \htmlinclude Response.msg.html

class Response : public ros::Message
{
public:
  typedef boost::shared_ptr<Response> Ptr;
  typedef boost::shared_ptr<Response const> ConstPtr;

  typedef std::vector<uint8_t> _rgb_type;

  std::vector<uint8_t> rgb;

  Response() : ros::Message()
  {
  rgb.resize(57600);
  }
  Response(const Response &copy) : ros::Message()
  {
    (void)copy;
    rgb = copy.rgb;
  }
  Response &operator =(const Response &copy)
  {
    if (this == &copy)
      return *this;
    rgb.clear();
    rgb = copy.rgb;
    return *this;
  }
  virtual ~Response() 
  {
    rgb.clear();
  }
  inline static std::string __s_getDataType() { return std::string("naoExpmnt/QVGAResponse"); }
  inline static std::string __s_getMD5Sum() { return std::string(""); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "uint8[57600] rgb\n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  inline static std::string __s_getServerMD5Sum() { return std::string("3c50f975e719c485e41d005c36162c51"); }
  inline virtual const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum(); }
  inline static std::string __s_getServiceDataType() { return std::string("naoExpmnt/QVGA"); }
  inline virtual const std::string __getServiceDataType() const { return __s_getServiceDataType(); }
  inline uint32_t get_rgb_size() const { return 57600; }
  inline void get_rgb_vec (std::vector<uint8_t> &__ros_vec) const
  {
    __ros_vec = this->rgb;
  }
  inline void set_rgb_vec(const std::vector<uint8_t> &__ros_vec)
  {
    this->rgb = __ros_vec;
  }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 57600 * 1; // rgb
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    memcpy(write_ptr, &rgb[0], sizeof(uint8_t) * 57600);
    write_ptr += sizeof(uint8_t) * 57600;
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    memcpy(&rgb[0], read_ptr, sizeof(uint8_t) * 57600);
    read_ptr += sizeof(uint8_t) * 57600;
    return read_ptr;
  }
};

typedef boost::shared_ptr<Response> ResponsePtr;
typedef boost::shared_ptr<Response const> ResponseConstPtr;

Request request;
Response response;

};

}

#endif
