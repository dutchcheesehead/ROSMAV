/* auto-generated by genmsg_cpp from /home/obot/ros/brown-ros-pkg/experimental/rlrobot/irobot_test/msg/Locations.msg.  Do not edit! */
#ifndef IROBOT_TEST_LOCATIONS_H
#define IROBOT_TEST_LOCATIONS_H

#include <string>
#include <vector>
#include "ros/message.h"
#include "ros/time.h"

#include "irobot_test/LocalizableObject.h"

namespace irobot_test
{

//! \htmlinclude Locations.msg.html

class Locations : public ros::Message
{
public:
  typedef boost::shared_ptr<Locations> Ptr;
  typedef boost::shared_ptr<Locations const> ConstPtr;

  typedef std::vector<irobot_test::LocalizableObject> _objectlist_type;

  std::vector<irobot_test::LocalizableObject> objectlist;

  Locations() : ros::Message()
  {
  }
  Locations(const Locations &copy) : ros::Message()
  {
    (void)copy;
    objectlist = copy.objectlist;
  }
  Locations &operator =(const Locations &copy)
  {
    if (this == &copy)
      return *this;
    objectlist.clear();
    objectlist = copy.objectlist;
    return *this;
  }
  virtual ~Locations() 
  {
    objectlist.clear();
  }
  inline static std::string __s_getDataType() { return std::string("irobot_test/Locations"); }
  inline static std::string __s_getMD5Sum() { return std::string("d54a280f7da3551346c2e82e4298dc42"); }
  inline static std::string __s_getMessageDefinition()
  {
    return std::string(
    "LocalizableObject[] objectlist\n"
    "\n"
    "================================================================================\n"
    "MSG: irobot_test/LocalizableObject\n"
    "uint32 objecttype\n"
    "uint32 objectid\n"
    "float64 posx\n"
    "float64 posy\n"
    "float64 yaw\n"
    "\n"
    "\n"
    );
  }
  inline virtual const std::string __getDataType() const { return __s_getDataType(); }
  inline virtual const std::string __getMD5Sum() const { return __s_getMD5Sum(); }
  inline virtual const std::string __getMessageDefinition() const { return __s_getMessageDefinition(); }
  void set_objectlist_size(uint32_t __ros_new_size)
  {
    this->objectlist.resize(__ros_new_size);
  }
  inline uint32_t get_objectlist_size() const { return objectlist.size(); }
  inline void get_objectlist_vec (std::vector<irobot_test::LocalizableObject> &__ros_vec) const
  {
    __ros_vec = this->objectlist;
  }
  inline void set_objectlist_vec(const std::vector<irobot_test::LocalizableObject> &__ros_vec)
  {
    this->objectlist = __ros_vec;
  }
  inline uint32_t serializationLength() const
  {
    unsigned __l = 0;
    __l += 4 + (objectlist.size() ? objectlist.size() * objectlist[0].serializationLength() : 0); // objectlist
    return __l;
  }
  virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    uint32_t __objectlist_size = objectlist.size();
    SROS_SERIALIZE_PRIMITIVE(write_ptr, __objectlist_size);
    for (size_t i = 0; i < __objectlist_size; i++)
      write_ptr = objectlist[i].serialize(write_ptr, seq);
    return write_ptr;
  }
  virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    uint32_t __objectlist_size;
    SROS_DESERIALIZE_PRIMITIVE(read_ptr, __objectlist_size);
    set_objectlist_size(__objectlist_size);
    for (size_t i = 0; i < __objectlist_size; i++)
      read_ptr = objectlist[i].deserialize(read_ptr);
    return read_ptr;
  }
};

typedef boost::shared_ptr<Locations> LocationsPtr;
typedef boost::shared_ptr<Locations const> LocationsConstPtr;


}

#endif
