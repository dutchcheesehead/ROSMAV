/* auto-generated by genmsg_cpp from /home/sosentos/ros/brown-ros-pkg/experimental/rlrobot/irobot_test/msg/topDownPos.msg.  Do not edit! */
package ros.pkg.irobot_test.msg;


import java.nio.ByteBuffer;

public  class topDownPos extends ros.communication.Message
{

  public float posx;
  public float posy;
  public float yaw;

  public topDownPos() {
 super();

  }
  public static java.lang.String __s_getDataType() { return "irobot_test/topDownPos"; }
  public static java.lang.String __s_getMD5Sum() { return "7f8be2666b5b18a1db5ae6e18b2a0607"; }
  public static java.lang.String __s_getMessageDefinition()
  {
    return 
    "float32 posx\n" + 
    "float32 posy\n" + 
    "float32 yaw\n" + 
    "\n" + 
    "\n" + 
    "";
  }
  public java.lang.String getDataType() { return __s_getDataType(); }
  public java.lang.String getMD5Sum()   { return __s_getMD5Sum(); }
  public java.lang.String getMessageDefinition() { return __s_getMessageDefinition(); }
  public topDownPos clone() {
    topDownPos clone = (topDownPos)super.clone();
    return clone;
  }

  public static java.util.Map<java.lang.String, java.lang.String> fieldTypes() {
         java.util.HashMap<java.lang.String, java.lang.String> m = new java.util.HashMap<java.lang.String, java.lang.String>  ();      m.put("posx", "float");
     m.put("posy", "float");
     m.put("yaw", "float");
     return m;
  }

  public static java.util.Set<java.lang.String> submessageTypes() {
         java.util.HashSet<java.lang.String> s = new java.util.HashSet<java.lang.String>  ();      return s;
  }

  public void setTo(ros.communication.Message __m) {
    if (!(__m instanceof topDownPos)) throw new RuntimeException("Invalid Type");
    topDownPos __m2 = (topDownPos) __m;
    posx = __m2.posx;
    posy = __m2.posy;
    yaw = __m2.yaw;
    }

  public int serializationLength() 
  {
    int __l = 0;
    __l += 4; // posx
    __l += 4; // posy
    __l += 4; // yaw
    return __l;
  }
  public void serialize(ByteBuffer bb, int seq) {
    bb.putFloat(posx);
    bb.putFloat(posy);
    bb.putFloat(yaw);
  }
  public void deserialize(ByteBuffer bb)  {
    posx = bb.getFloat();
    posy = bb.getFloat();
    yaw = bb.getFloat();
  }
}

