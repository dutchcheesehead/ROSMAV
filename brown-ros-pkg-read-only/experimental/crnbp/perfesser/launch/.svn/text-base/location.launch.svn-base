<!-- Use this launch file to start location guessing routines on a single node.
     The inputs include odometry and ar_recog. -->
<launch>

  <!-- Create driver -->
  <param name="brown/irobot_create_2_1a/port" value="/dev/ttyUSB0" />
  <node name="irobot_create_2_1a" pkg="irobot_create_2_1a" type="driver.py" />

  <!-- *****************************  Map server -->
<!--  <node name="map_server" pkg="map_server" type="map_server" args="$(find map_filter)/maps/fourth_floor_map.yaml"/> -->

  <!-- *****************************  Start AR-relevant processes. -->
  <env name="GSCAM_CONFIG"
       value="v4l2src device=/dev/video1 ! video/x-raw-rgb ! ffmpegcolorspace ! identity name=ros"/>
  <node name="gscam"  pkg="gscam" type="gscam" cwd="node"/>

  <param name="aov" value="1.16632169603"/>
  <param name="ar_smooth" value="false" type="bool"/>
  <node name="ar_recog" pkg="ar_recog" type="ar_recog" args="image:=/gscam/image_raw" cwd="node" />

  <!-- Camera video -->
  <!-- uncomment this to see the video with the green outline of the AR tags. -->
<!-- <node name="image_view" pkg="image_view" type="image_view" args="image:=/ar/image" /> -->

  <!-- ***************************** Guesser parameters.  -->
  <param name="/guesser/position/npoints" value="200"/>
  <param name="/guesser/position/wait_time" value="0.01"/>

  <!-- ***************************** AR Server.  -->
  <!-- The collection of tag locations can be edited dynamically. -->
<!-- <param name="/guesser/position/ar_filter/file_name" value="$(find ar_filter)/bin/ar_tag_locations_ffloor.txt"/> -->
<param name="/guesser/position/ar_filter/file_name" value="$(find ar_filter)/bin/ar_tag_locations.txt"/>
  <param name="/guesser/position/ar_filter/d_error" value="0.5"/>
  <param name="/guesser/position/ar_filter/ang_error" value="0.15"/>
  <param name="/guesser/position/ar_filter/id_error" value="0.95"/>
  <param name="/guesser/position/ar_filter/motion_error" value="3.0"/>
  <node name="ar_filter" pkg="ar_filter" type="ar_filter.py"/> 

  <!-- *****************************  Start odometry-relevant processes. -->
  <param name="/guesser/position/odom_filter/pos_error" value="0.3"/>
  <param name="/guesser/position/odom_filter/theta_error" value="0.2"/>
  <param name="/guesser/position/odom_filter/phi_error" value="0.07"/>
  <node name="odom_filter" pkg="odom_filter" type="odom_filter.py"/> 
<!--  <node name="position_tracker" pkg="position_tracker" type="position_tracker.py"/> -->

  <!-- *****************************  Start perfesser processes. -->
  <node name="perfesser" pkg="perfesser" type="perfesser.py"/> 
  <!-- for debugging only -->
  <node name="perfesser_summarizer" pkg="perfesser" type="perfesser_summarizer.py"/>


</launch>