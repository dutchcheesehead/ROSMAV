<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>Web Genie</title>
<!-- load Dojo and the default dojo theme, claro -->
<link rel="stylesheet" href="styles.css" />
<link rel="stylesheet" href="../../dojo17/dijit/themes/claro/claro.css" />
<script src="../../dojo17/dojo/dojo.js"></script>
<script>
   	function resize() {
   		// Get the size of the window
   		var window_height = dojo.window.getBox().h;
   		console.log("window height is ", window_height);
   		
   		// Get the nanokontrol height
		var nanokontrol_height = dojo.marginBox(dojo.byId("nanokontrol-widget")).h
		console.log("nanokontrol height is ", nanokontrol_height);
		
		// Get the height of the headers
		var headers_height = dojo.marginBox(dojo.byId("headers")).h;
		console.log("headers height is ", headers_height);
   		
   		// Set the height of the list and visualization to be the remaining space
   		var calculated_height = window_height - nanokontrol_height - headers_height;
   		dijit.byId("sequence-widget").setHeight(calculated_height);
   		dijit.byId("visualization-widget").setHeight(calculated_height);
   	}
	/**
	* The initialize method sets the URL paths to the modules we're using, so that
	* dojo knows where to load files from correctly.  It also loads the widgets
	* that are displayed on the page initially.
	*/
   	function initialize() {   		
   		// Register the paths for where each of the modules are.  Paths are
   		// relative to where dojo.js is loaded from.
        dojo.registerModulePath("rosdojo", "../../brown/rosdojo");
        dojo.registerModulePath("roswidgets", "../../brown/roswidgets");
        dojo.registerModulePath("bosch", "../../bosch");
        dojo.registerModulePath("museum", "../../willow/museum");
        
		// Now specify the main widgets in the page
        dojo.require("roswidgets.ConnectionPanel");
        dojo.require("bosch.Visualization");
        dojo.require("museum.PoseSequence");     
        dojo.require("museum.KorgNanokontrol");
        
        // Parse the page.  This creates widgets in place of the <div> tags below
   		dojo.parser.parse();  
        
        // Call the resize method to do a little bit of fancy layout. Most widgets
        // are capable of making themselves the right size, but we may need to lend help
        resize();
        
        // Make it so that whenever the window is resized, so are our widgets
        dojo.connect(window, "resize", resize);
        
        // Finally, run the application logic that ties together the widgets
        museum();
   	}
   	function museum() {
   		// Get handles to the widgets
   		var sequence = dijit.byId("sequence-widget");
   		var visualization = dijit.byId("visualization-widget");
   		
   		// Subscribe to the korg controller.  Whenever the record button is pressed,
   		// add a new pose to the pose sequence
        ros.subscribe("/korg_joy", function(korgState) {
        	if (korgState.buttons[23]==1) {
        		visualization.generatePreview(function(imgPreview) {
        			console.log("Adding the pose to the pose sequence");
        			sequence.addPose(korgState, imgPreview);
        		});
        	} 	        	
        });      
   	}
   	dojo.ready(initialize);
   </script>
</head>
<body class="claro webtools" style="font: 14px Myriad,Helvetica,Tahoma,Arial,clean,sans-serif;">
	<div id="headers">
		<img src="wglogo.gif" class="logo">
		<img src="cartoon.png" class="cartoon">
		<div dojoType="roswidgets.ConnectionPanel" id=></div>
	</div>
	<div dojoType="museum.PoseSequence" id="sequence-widget"></div>
	<div dojoType="bosch.Visualization" id="visualization-widget"></div>
	<div class="clear"></div>
	<div dojoType="museum.KorgNanokontrol" id="nanokontrol-widget"></div>
</body>
</html>